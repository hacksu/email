name: Publish

on:
  push:
      branches: [ main ]
  release:
    types: [created]
  workflow_dispatch:

jobs:
  versioning:
    runs-on: ubuntu-latest
    name: Versioning
    concurrency:
      group: automatic_versioning
      cancel-in-progress: true
    outputs:
      run_publish: ${{ steps.check_publish.outputs.run_publish }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Versioning Precheck
        id: check_publish
        run: |
          pkgName=$(cat package.json | jq -r ".name");
          publishedVersion=$(curl "https://registry.npmjs.org/${pkgName}/latest" | jq -r ".version");
          currentVersion=$(cat package.json | jq -r ".version");
          echo "Package: $pkgName";
          echo "Published: $publishedVersion";
          echo "Current: $currentVersion";
          if [ "$publishedVersion" = "$currentVersion" ]
          then
              echo "Publish: false"
              echo "::set-output name=run_publish::false"
          else
              echo "Publish: true"
              echo "::set-output name=run_publish::true"
          fi

  publish:
    runs-on: ubuntu-latest
    name: Publish
    needs: versioning
    if: github.event_name == 'workflow_dispatch2' || needs.publish.outputs.run_publish == 'true'
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          registry-url: 'https://registry.npmjs.org'
      - run: npm install
      - run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - uses: actions/setup-node@v2
        with:
          registry-url: 'https://npm.pkg.github.com'
      - run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
